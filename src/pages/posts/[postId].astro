---
import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';
import timezone from 'dayjs/plugin/timezone';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../config';
import type { Blog } from "../../library/microcms";
import { fetchContentOrPreview } from "../../utils/fetchContentOrPreview";

dayjs.locale('ja');
dayjs.extend(utc);
dayjs.extend(timezone);

export const prerender = false;

const { postId } = Astro.params;
if (!postId) throw new Error("id is required");

const url = new URL(Astro.request.url);
const draftKey = url.searchParams.get("draftKey");

const cachePolicies = {
  noCache: "no-store, no-cache, max-age=0, must-revalidate",
  publicIsr: "public, s-maxage=30, stale-while-revalidate=30",
};

const post: Blog | null = await fetchContentOrPreview<Blog>({
  endpoint: "blogs",
  postId,
  draftKey,
});

// 詳細データがない場合は 404 ページにリダイレクト
if (!post) {
  Astro.response.headers.set("Cache-Control", cachePolicies.noCache);
  return Astro.redirect("/404", 302);
}

// キャッシュポリシーを設定
const cachePolicy = draftKey ? cachePolicies.noCache : cachePolicies.publicIsr;
Astro.response.headers.set("Cache-Control", cachePolicy);

---

<!DOCTYPE html>
<html lang="ja">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} thumbnail={post.thumbnail} />
	</head>
	<body>
		<Header title={SITE_TITLE} />
		<main>
			<div>
        <div class="post">
          <h2 class="post-title">
            {dayjs(post.date).tz('Asia/Tokyo').format('YYYY.MM.DD ddd.')}
          </h2>
          <div set:html={post.content} class="entry-content" />
        </div>
			</div>
		</main>
		<Footer />
	</body>
</html>